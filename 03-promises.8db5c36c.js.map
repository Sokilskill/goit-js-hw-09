{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdMQ,SAASC,cAAc,SAkB/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAW,IAAIC,SAASH,EAAMI,eAC9BC,EAAaC,OAAOJ,EAASK,IAAI,UACjCC,EAAOF,OAAOJ,EAASK,IAAI,SAC3BE,EAASH,OAAOJ,EAASK,IAAI,YASrC,SAAwBF,EAAYG,EAAMC,GACxC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInCvB,EAAcuB,EAHOL,GAAcK,EAAI,GAAKF,GAIzCG,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAA4B,OAAOI,QAAQ,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,KAdlE6B,CAAeb,EAAYG,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formData = new FormData(event.currentTarget);\n  const firstDelay = Number(formData.get('delay'));\n  const step = Number(formData.get('step'));\n  const amount = Number(formData.get('amount'));\n\n  // const amountInput = document.querySelector('[name=\"amount\"]');\n  // const amount = parseInt(amountInput.value);\n\n  createPromises(firstDelay, step, amount);\n  // createPromi(firstDelay, step, amount);\n}\n\nfunction createPromises(firstDelay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    const currentDelay = firstDelay + (i - 1) * step;\n    // console.log(currentDelay, firstDelay, (i - 1) * step);\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n// function createPromi(delay, step, amount) {\n//   for (let i = 1; i <= amount; i += 1) {\n//     const position = i + 1;\n//     console.log(position, delay);\n\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += step;\n//   }\n// }\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","formData","FormData","currentTarget","firstDelay","Number","get","step","amount","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.8db5c36c.js.map"}